# Use:
# tmux-yank plugin: prefix + Y for copying working dir, and tmux select + y copy
# to clipboard

# better esc response for nvim
set -sg escape-time 0

# change to dir of last pane when creating new windows/panes
bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}" # ' is making " not detected as comment

####
# vi like copy mode from https://leanside.com/2014/01/copy-paste-in-tmux/
####
# in normal tmux mode
#bind Escape copy-mode # `tmux prefix + Escape` starts copy mode.
bind p paste-buffer # `prefix + p` pastes the latest buffer
bind-key -t vi-copy 'V' begin-selection
set -g focus-events on # for vim-tmux-focus-events plugin

# move tmux copy buffer into x clipboard (replaced with plugin, tmux-yank)
# bind -t vi-copy y copy-pipe "xclip" 
# bind-key -t vi-copy 'y' copy-selection


set-window-option -g aggressive-resize


# in copy mode…
bind -t vi-copy v begin-selection # `v` begins a selection. (movement keys to
# select the desired bits)
bind -t vi-copy y copy-selection # `y` copies the current selection to one of
# tmux's "paste buffers"
bind -t vi-copy V rectangle-toggle # `V` changes between line- and columnwise selection

bind -t vi-copy Y copy-end-of-line # ^1
bind + delete-buffer

# Standard buffer keybindings (to initialize only press 'tmux prefix keybind'
# (strg + b))
#
# # List all paste buffers.
# - Delete the most recently copied buffer of text.
# = Choose which buffer to paste interactively from a list.
# [ Enter copy mode to copy text or view the history.
# ] Paste the most recently copied buffer of text. 

###
# mouse mode
###
set -g mouse on

# look good
set -g default-terminal "screen-256color"

set-option -g set-clipboard on
set -g history-limit 1000
set -g status-interval 1
set -g status-left '#H#[default]'
set -g status-right '#(cut -d ” ” -f 1-4 /proc/loadavg)#[default] #%Y-%m-%d %H:%M:%S#[default]'
setw -g monitor-activity on
set -g visual-activity on

setw -g mode-keys vi

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-copycat'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of
# tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red

# smart pane switching with awareness of vim splits:
# https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-S-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# select other window
bind -n C-S-j next-window
bind -n C-S-k previous-window

